---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ include "curve-csi.name" . }}-nodeplugin
  namespace: {{ .Release.Namespace }}
  labels:
    release: {{ .Release.Name }}
    app: {{ include "curve-csi.name" . }}-nodeplugin
spec:
  selector:
    matchLabels:
      app: {{ include "curve-csi.name" . }}-nodeplugin
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      labels:
        app: {{ include "curve-csi.name" . }}-nodeplugin
    spec:
      serviceAccount: curve-csi-nodeplugin
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: driver-registrar
        image: "{{ .Values.nodeplugin.registrar.image.repository }}:{{ .Values.nodeplugin.registrar.image.tag }}"
        imagePullPolicy: {{ .Values.nodeplugin.registrar.image.pullPolicy }}
        securityContext:
          privileged: true
        args:
        - "--v=5"
        - "--csi-address=$(ADDRESS)"
        - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "rm -rf /registration/curve.csi.netease.com /registration/curve.csi.netease.com-reg.sock"]
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: DRIVER_REG_SOCK_PATH
          value: /var/lib/kubelet/plugins/curve.csi.netease.com/csi.sock
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        - name: registration-dir
          mountPath: /registration
        resources:
{{ toYaml .Values.nodeplugin.registrar.resources | indent 10 }}
      - name: csi-curveplugin
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
          allowPrivilegeEscalation: true
        image: "{{ .Values.nodeplugin.plugin.image.repository }}:{{ .Values.nodeplugin.plugin.image.tag }}"
        imagePullPolicy: {{ .Values.nodeplugin.plugin.image.pullPolicy }}
        args:
        - --endpoint=$(CSI_ENDPOINT)
        - --drivername=curve.csi.netease.com
        - --nodeid=$(NODE_ID)
{{- if .Values.nodeplugin.debug.enabled }}
        - "--debug-port={{ .Values.nodeplugin.debug.port }}"
{{- end }}
        - --node-server=true
{{- if .Values.nodeplugin.logToFile.enabled }}
        - --logtostderr=false
        - --log_dir=/var/log/csi-curveplugin
{{- end }}
        - -v=4
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        resources:
{{ toYaml .Values.nodeplugin.plugin.resources | indent 10 }}
        volumeMounts:
        - name: socket-dir
          mountPath: /csi
        - mountPath: /dev
          name: host-dev
        - mountPath: /sys
          name: host-sys
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - name: plugin-dir
          mountPath: /var/lib/kubelet/plugins
          mountPropagation: "Bidirectional"
        - name: mountpoint-dir
          mountPath: /var/lib/kubelet/pods
          mountPropagation: "Bidirectional"
        - mountPath: /etc/localtime
          name: localtime
{{- if .Values.nodeplugin.logToFile.enabled }}
        - mountPath: /var/log/csi-curveplugin
          name: log
{{- end }}
      volumes:
      - name: socket-dir
        hostPath:
          path: /var/lib/kubelet/plugins/curve.csi.netease.com
          type: DirectoryOrCreate
      - name: plugin-dir
        hostPath:
          path: /var/lib/kubelet/plugins
          type: Directory
      - name: mountpoint-dir
        hostPath:
          path: /var/lib/kubelet/pods
          type: DirectoryOrCreate
      - name: registration-dir
        hostPath:
          path: /var/lib/kubelet/plugins_registry/
          type: Directory
      - name: host-dev
        hostPath:
          path: /dev
      - name: host-sys
        hostPath:
          path: /sys
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: localtime
        hostPath:
          path: /etc/localtime
{{- if .Values.nodeplugin.logToFile.enabled }}
      - name: log
        hostPath:
          path: {{ .Values.nodeplugin.logToFile.hostDir }}
{{- end -}}
{{- if .Values.nodeplugin.affinity }}
      affinity:
{{ toYaml .Values.nodeplugin.affinity . | indent 8 -}}
{{- end -}}
{{- if .Values.nodeplugin.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeplugin.nodeSelector | indent 8 -}}
{{- end -}}
{{- if .Values.nodeplugin.tolerations }}
      tolerations:
{{ toYaml .Values.nodeplugin.tolerations | indent 8 -}}
{{- end -}}
